<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="RapidFloatingActionLayout">
        <attr name="rfal_frame_color" format="color" />
        <attr name="rfal_frame_alpha" format="float" />
    </declare-styleable>

    <declare-styleable name="RapidFloatingActionButton">
        <attr name="rfab_size" format="enum">
            <!-- 56dp -->
            <enum name="normal" value="0" />
            <!-- 40dp -->
            <enum name="mini" value="1" />
        </attr>
        <attr name="rfab_drawable" format="reference" />
        <attr name="rfab_color_normal" format="color" />
        <attr name="rfab_color_pressed" format="color" />
        <attr name="rfab_shadow_radius" format="dimension" />
        <attr name="rfab_shadow_color" format="color" />
        <attr name="rfab_shadow_dx" format="dimension" />
        <attr name="rfab_shadow_dy" format="dimension" />
        <!-- identificationCode用于确定唯一个RFAB，目前用在通过RapidFloatingActionButtonGroup中获取某一个RFAB -->
        <attr name="rfab_identification_code" format="string" />
    </declare-styleable>
    <!--pull to refresh-->
    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
    <!--circleProgressBar-->
    <declare-styleable name="CircleProgressBar">
        <attr name="line_count" format="integer" />
        <attr name="draw_progress_text" format="boolean" />
        <attr name="line_width" format="dimension|reference" />
        <attr name="background_color" format="color|reference" />
        <attr name="progress_start_color" format="color|reference" />
        <attr name="progress_end_color" format="color|reference" />
        <attr name="progress_text_color" format="color|reference" />
        <attr name="progress_text_size" format="dimension|reference" />
        <attr name="progress_stroke_width" format="dimension|reference" />
        <attr name="progress_background_color" format="color|reference" />
        <attr name="progress_text_format_pattern" format="string|reference" />

        <attr name="style">
            <enum name="line" value="0" />
            <enum name="solid" value="1" />
            <enum name="solid_line" value="2" />
        </attr>

        <attr name="progress_shader">
            <enum name="linear" value="0" />
            <enum name="radial" value="1" />
            <enum name="sweep" value="2" />
        </attr>

        <attr name="progress_stroke_cap">
            <enum name="butt" value="0" />
            <enum name="round" value="1" />
            <enum name="square" value="2" />
        </attr>

    </declare-styleable>
    <!--TabIndicator-->
    <declare-styleable name="TabIndicator">
        <attr name="tiTabPaddingLeft" format="dimension" />
        <attr name="tiTabPaddingRight" format="dimension" />
        <attr name="tiTabPaddingTop" format="dimension" />
        <attr name="tiTabPaddingBottom" format="dimension" />

        <attr name="tiTabBackground" format="reference" />
        <attr name="tiTabTextColor" format="reference|color" />
        <attr name="tiTabTextSize" format="dimension" />
        <attr name="tiTabTextBlod" format="boolean" />

        <attr name="tiUnderLineHeight" format="dimension" />
        <attr name="tiUnderLineColor" format="color" />

        <!-- tab indicator mode -->
        <attr name="tiTabMode" format="enum">
            <enum name="line" value="0" />
            <enum name="triangle" value="1" />
            <enum name="rect" value="2" />
        </attr>

        <!-- line mode attrs -->
        <attr name="tiLineHeight" format="dimension" />
        <attr name="tiLineColor" format="color" />
        <attr name="tiLineStyle" format="enum">
            <enum name="match" value="0" />
            <enum name="wrap" value="1" />
        </attr>

        <!-- triangle mode attrs -->
        <attr name="tiTriangleHeight" format="dimension" />
        <attr name="tiTriangleWidth" format="dimension" />
        <attr name="tiTriangleColor" format="color" />
        <attr name="tiTriangleStyle" format="enum">
            <enum name="fill" value="0" />
            <enum name="stroke" value="1" />
        </attr>
        <attr name="tiTriangleStrokeWidth" format="dimension" />

        <!-- rect mode attrs -->
        <attr name="tiRectPaddingLeft" format="dimension" />
        <attr name="tiRectPaddingTop" format="dimension" />
        <attr name="tiRectPaddingRight" format="dimension" />
        <attr name="tiRectPaddingBottom" format="dimension" />
        <attr name="tiRectColor" format="color" />
        <attr name="tiRectRadius" format="dimension" />
        <attr name="tiRectStyle" format="enum">
            <enum name="fill" value="0" />
            <enum name="stroke" value="1" />
        </attr>
        <attr name="tiRectStrokeWidth" format="dimension" />
        <attr name="tiRectStrokeColor" format="color" />
    </declare-styleable>

    <!--SwiptToLoadLayoutt-->
    <declare-styleable name="SwipeToLoadLayout">
        <attr name="refresh_enabled" format="boolean" />
        <attr name="load_more_enabled" format="boolean" />

        <attr name="swipe_style" format="enum">
            <enum name="classic" value="0" />
            <enum name="above" value="1" />
            <enum name="blew" value="2" />
            <enum name="scale" value="3" />
        </attr>

        <attr name="drag_ratio" format="float" />

        <attr name="refresh_trigger_offset" format="dimension" />
        <attr name="load_more_trigger_offset" format="dimension" />
        <attr name="refresh_final_drag_offset" format="dimension" />
        <attr name="load_more_final_drag_offset" format="dimension" />

        <attr name="swiping_to_refresh_to_default_scrolling_duration" format="integer" />
        <attr name="release_to_refreshing_scrolling_duration" format="integer" />
        <attr name="refresh_complete_delay_duration" format="integer" />
        <attr name="refresh_complete_to_default_scrolling_duration" format="integer" />
        <attr name="default_to_refreshing_scrolling_duration" format="integer" />
        <attr name="swiping_to_load_more_to_default_scrolling_duration" format="integer" />
        <attr name="release_to_loading_more_scrolling_duration" format="integer" />
        <attr name="load_more_complete_delay_duration" format="integer" />
        <attr name="load_more_complete_to_default_scrolling_duration" format="integer" />
        <attr name="default_to_loading_more_scrolling_duration" format="integer" />
    </declare-styleable>
</resources>